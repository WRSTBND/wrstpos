// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Format a decimal value. Returns empty string if date is empty.
 * @param {Big} decimalToFormat
 * @param {Big} numberOfDecimals
 * @param {boolean} thousandSeparators
 * @returns {Promise.<string>}
 */
export async function FormatDecimal(decimalToFormat, numberOfDecimals, thousandSeparators) {
	// BEGIN USER CODE
	return new Promise(function(resolve, reject) {
		var formattedDecimal,
			props;
		if (typeof decimalToFormat !== "undefined" && decimalToFormat !== null) {
			if (typeof numberOfDecimals !== "undefined" && numberOfDecimals !== null) {
				try {
					props = {
						places: Number(numberOfDecimals.toFixed()),
						groups: (typeof thousandSeparators !== "undefined" && thousandSeparators)
					};
					formattedDecimal = mx.parser.formatValue(decimalToFormat, "decimal", props);
					resolve(formattedDecimal);
				} catch (error) {
					if (error && error.message) {
						reject("FormatDecimal failed: " + error.message);
					} else {
						reject("FormatDecimal failed.");
					}
				}
			} else {
				reject("FormatDecimal: No number of decimals specified");
			}
		} else {
			resolve("");
		}
	});
	// END USER CODE
}
